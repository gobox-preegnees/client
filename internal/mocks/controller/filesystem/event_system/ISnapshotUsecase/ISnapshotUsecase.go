// Code generated by MockGen. DO NOT EDIT.
// Source: event_system.go

// Package mock_filesystem is a generated GoMock package.
package mock_filesystem

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockISnapshotUsecase is a mock of ISnapshotUsecase interface.
type MockISnapshotUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockISnapshotUsecaseMockRecorder
}

// MockISnapshotUsecaseMockRecorder is the mock recorder for MockISnapshotUsecase.
type MockISnapshotUsecaseMockRecorder struct {
	mock *MockISnapshotUsecase
}

// NewMockISnapshotUsecase creates a new mock instance.
func NewMockISnapshotUsecase(ctrl *gomock.Controller) *MockISnapshotUsecase {
	mock := &MockISnapshotUsecase{ctrl: ctrl}
	mock.recorder = &MockISnapshotUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISnapshotUsecase) EXPECT() *MockISnapshotUsecaseMockRecorder {
	return m.recorder
}

// CreateSnapshot mocks base method.
func (m *MockISnapshotUsecase) CreateSnapshot(mode int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateSnapshot", mode)
}

// CreateSnapshot indicates an expected call of CreateSnapshot.
func (mr *MockISnapshotUsecaseMockRecorder) CreateSnapshot(mode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSnapshot", reflect.TypeOf((*MockISnapshotUsecase)(nil).CreateSnapshot), mode)
}
